#ifndef UNITCONVERTER_HPP
#define UNITCONVERTER_HPP

#include <iostream>
#include <string>
#include <memory>

class UnitConverter
{
  public:
    UnitConverter();
    UnitConverter(std::shared_ptr<UnitConverter> const& deco) : decorate{deco}{};
    virtual std::shared_ptr<UnitConverter> clone(){}
    virtual double convert(double inValue) {}
    virtual std::string toString() {}
    virtual void print() {}
    
    
  protected:
		std::shared_ptr<UnitConverter> decorate;
  
};

#endif // UNITCONVERTER_HPP
